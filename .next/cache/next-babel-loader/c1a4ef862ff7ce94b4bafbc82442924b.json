{"ast":null,"code":"/*import React from 'react';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport App from 'next/app';\r\nimport withRedux from 'next-redux-wrapper';\r\n// import \"./App.scss\";\r\n\r\nlet composeEnhancers;\r\n\r\nif (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\r\n  composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\n} else {\r\n  composeEnhancers = compose;\r\n}\r\n\r\nconst makeStore = (initialState, { isServer }) =>\r\n  isServer\r\n    ? createStore(rootReducer, initialState)\r\n    : createStore(rootReducer, initialState, composeEnhancers(applyMiddleware(thunk)));\r\nclass MyApp extends App {\r\n  static async getInitialProps({ Component, ctx }) {\r\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n\r\n    return { pageProps };\r\n  }\r\n\r\n  render() {\r\n    const { Component, pageProps, store } = this.props;\r\n\r\n    return (\r\n      <Provider store={store}>\r\n        <Component {...pageProps} />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRedux(makeStore)(MyApp);*/","map":{"version":3,"sources":["C:/Learn/ReactJS Mentoring Program/ReactJS-gmp/pages/_app.jsx"],"names":[],"mappings":"AAAA","sourcesContent":["/*import React from 'react';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport App from 'next/app';\r\nimport withRedux from 'next-redux-wrapper';\r\n// import \"./App.scss\";\r\n\r\nlet composeEnhancers;\r\n\r\nif (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\r\n  composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\n} else {\r\n  composeEnhancers = compose;\r\n}\r\n\r\nconst makeStore = (initialState, { isServer }) =>\r\n  isServer\r\n    ? createStore(rootReducer, initialState)\r\n    : createStore(rootReducer, initialState, composeEnhancers(applyMiddleware(thunk)));\r\nclass MyApp extends App {\r\n  static async getInitialProps({ Component, ctx }) {\r\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n\r\n    return { pageProps };\r\n  }\r\n\r\n  render() {\r\n    const { Component, pageProps, store } = this.props;\r\n\r\n    return (\r\n      <Provider store={store}>\r\n        <Component {...pageProps} />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRedux(makeStore)(MyApp);*/\r\n"]},"metadata":{},"sourceType":"module"}